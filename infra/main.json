{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "12347140138507756490"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "namePrefix": {
      "type": "string"
    },
    "pbiClientId": {
      "type": "string",
      "metadata": {
        "description": "Service principal client id for Power BI service principal"
      }
    },
    "pbiClientSecret": {
      "type": "securestring"
    },
    "pbiTenantId": {
      "type": "string"
    }
  },
  "variables": {
    "webAppName": "[format('{0}-web', parameters('namePrefix'))]",
    "functionAppName": "[format('{0}-func', parameters('namePrefix'))]",
    "storageName": "[toLower(replace(format('{0}stor', parameters('namePrefix')), '-', ''))]",
    "planName": "[format('{0}-plan', parameters('namePrefix'))]",
    "kvName": "[format('{0}-kv', parameters('namePrefix'))]",
    "addressSpace": "10.10.0.0/16",
    "appSubnetPrefix": "10.10.1.0/24",
    "privateEndpointsSubnetPrefix": "10.10.2.0/24",
    "blobPrivateLinkZone": "[format('privatelink.blob.{0}', environment().suffixes.storage)]",
    "appSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('{0}-vnet', parameters('namePrefix')), 'apps')]",
    "peSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('{0}-vnet', parameters('namePrefix')), 'private-endpoints')]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-09-01",
      "name": "[format('{0}-vnet', parameters('namePrefix'))]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressSpace')]"
          ]
        },
        "subnets": [
          {
            "name": "apps",
            "properties": {
              "addressPrefix": "[variables('appSubnetPrefix')]",
              "delegations": [
                {
                  "name": "webdelegation",
                  "properties": {
                    "serviceName": "Microsoft.Web/serverFarms"
                  }
                }
              ]
            }
          },
          {
            "name": "private-endpoints",
            "properties": {
              "addressPrefix": "[variables('privateEndpointsSubnetPrefix')]",
              "privateEndpointNetworkPolicies": "Disabled"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2023-12-01",
      "name": "[variables('planName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "S1",
        "tier": "Standard"
      },
      "kind": "linux",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[variables('storageName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "allowBlobPublicAccess": false,
        "minimumTlsVersion": "TLS1_2",
        "publicNetworkAccess": "Disabled",
        "supportsHttpsTrafficOnly": true
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "name": "[variables('kvName')]",
      "location": "[parameters('location')]",
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "accessPolicies": [],
        "enabledForTemplateDeployment": true
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/secrets",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', variables('kvName'), 'PBI-Client-Secret')]",
      "properties": {
        "value": "[parameters('pbiClientSecret')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('kvName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-12-01",
      "name": "[variables('webAppName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('planName'))]",
        "httpsOnly": true,
        "virtualNetworkSubnetId": "[variables('appSubnetId')]",
        "siteConfig": {
          "vnetRouteAllEnabled": true,
          "appSettings": [
            {
              "name": "PBI_CLIENT_ID",
              "value": "[parameters('pbiClientId')]"
            },
            {
              "name": "PBI_TENANT_ID",
              "value": "[parameters('pbiTenantId')]"
            },
            {
              "name": "FUNCTION_API_BASE_URL",
              "value": "[format('https://{0}.privatelink.azurewebsites.net', variables('functionAppName'))]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('planName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet', parameters('namePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-12-01",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp,linux",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('planName'))]",
        "publicNetworkAccess": "Disabled",
        "httpsOnly": true,
        "siteConfig": {
          "linuxFxVersion": "DOTNET|8.0",
          "ipSecurityRestrictions": [
            {
              "name": "DenyAll",
              "description": "Block all public traffic; rely on Private Endpoint",
              "action": "Deny",
              "priority": 100,
              "ipAddress": "0.0.0.0/0"
            }
          ],
          "appSettings": [
            {
              "name": "AzureWebJobsStorage__accountName",
              "value": "[variables('storageName')]"
            },
            {
              "name": "AzureWebJobsStorage__blobServiceUri",
              "value": "[format('https://{0}.blob.{1}', variables('storageName'), environment().suffixes.storage)]"
            },
            {
              "name": "AzureWebJobsStorage__queueServiceUri",
              "value": "[format('https://{0}.queue.{1}', variables('storageName'), environment().suffixes.storage)]"
            },
            {
              "name": "AzureWebJobsStorage__tableServiceUri",
              "value": "[format('https://{0}.table.{1}', variables('storageName'), environment().suffixes.storage)]"
            },
            {
              "name": "AzureWebJobsStorage__blobServiceUri__credential",
              "value": "managedidentity"
            },
            {
              "name": "AzureWebJobsStorage__queueServiceUri__credential",
              "value": "managedidentity"
            },
            {
              "name": "AzureWebJobsStorage__tableServiceUri__credential",
              "value": "managedidentity"
            },
            {
              "name": "PBI_CLIENT_ID",
              "value": "[parameters('pbiClientId')]"
            },
            {
              "name": "PBI_TENANT_ID",
              "value": "[parameters('pbiTenantId')]"
            },
            {
              "name": "PBI_CLIENT_SECRET",
              "value": "[format('@Microsoft.KeyVault(SecretUri={0})', format('{0}secrets/PBI-Client-Secret', reference(resourceId('Microsoft.KeyVault/vaults', variables('kvName')), '2023-07-01').vaultUri))]"
            },
            {
              "name": "USER_CSV_CONTAINER",
              "value": "data"
            },
            {
              "name": "USER_CSV_FILENAME",
              "value": "user_locations.csv"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "0"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('kvName'))]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('kvName'), 'PBI-Client-Secret')]",
        "[resourceId('Microsoft.Web/serverfarms', variables('planName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/default/data', variables('storageName'))]",
      "properties": {},
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults/accessPolicies",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}/{1}', variables('kvName'), 'add')]",
      "properties": {
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2023-12-01', 'full').identity.principalId]",
            "permissions": {
              "secrets": [
                "get",
                "list"
              ]
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('kvName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "name": "privatelink.azurewebsites.net",
      "location": "global"
    },
    {
      "type": "Microsoft.Network/privateDnsZones",
      "apiVersion": "2020-06-01",
      "name": "[variables('blobPrivateLinkZone')]",
      "location": "global"
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}/{1}', 'privatelink.azurewebsites.net', format('{0}-link-web', parameters('namePrefix')))]",
      "properties": {
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet', parameters('namePrefix')))]"
        },
        "registrationEnabled": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.azurewebsites.net')]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet', parameters('namePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
      "apiVersion": "2020-06-01",
      "name": "[format('{0}/{1}', variables('blobPrivateLinkZone'), format('{0}-link-blob', parameters('namePrefix')))]",
      "properties": {
        "virtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet', parameters('namePrefix')))]"
        },
        "registrationEnabled": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', variables('blobPrivateLinkZone'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet', parameters('namePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2023-09-01",
      "name": "[format('{0}-pe-func', parameters('namePrefix'))]",
      "location": "[parameters('location')]",
      "properties": {
        "subnet": {
          "id": "[variables('peSubnetId')]"
        },
        "privateLinkServiceConnections": [
          {
            "name": "funcConnection",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
              "groupIds": [
                "sites"
              ],
              "requestMessage": "Private access to Function App"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet', parameters('namePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "apiVersion": "2023-09-01",
      "name": "[format('{0}/{1}', format('{0}-pe-func', parameters('namePrefix')), 'default')]",
      "properties": {
        "privateDnsZoneConfigs": [
          {
            "name": "webconfig",
            "properties": {
              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.azurewebsites.net')]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', 'privatelink.azurewebsites.net')]",
        "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-pe-func', parameters('namePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateEndpoints",
      "apiVersion": "2023-09-01",
      "name": "[format('{0}-pe-storblob', parameters('namePrefix'))]",
      "location": "[parameters('location')]",
      "properties": {
        "subnet": {
          "id": "[variables('peSubnetId')]"
        },
        "privateLinkServiceConnections": [
          {
            "name": "storBlobConnection",
            "properties": {
              "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
              "groupIds": [
                "blob"
              ],
              "requestMessage": "Private access to Storage Blob"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet', parameters('namePrefix')))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', variables('storageName'))]",
      "name": "[guid(subscription().id, resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), variables('functionAppName'), 'blob-data')]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2023-12-01', 'full').identity.principalId]",
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', variables('storageName'))]",
      "name": "[guid(subscription().id, resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), variables('functionAppName'), 'queue-data')]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2023-12-01', 'full').identity.principalId]",
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '974c5e8b-45b9-4653-ba55-5f855dd0fb88')]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
      "apiVersion": "2023-09-01",
      "name": "[format('{0}/{1}', format('{0}-pe-storblob', parameters('namePrefix')), 'default')]",
      "properties": {
        "privateDnsZoneConfigs": [
          {
            "name": "blobconfig",
            "properties": {
              "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('blobPrivateLinkZone'))]"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/privateDnsZones', variables('blobPrivateLinkZone'))]",
        "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-pe-storblob', parameters('namePrefix')))]"
      ]
    }
  ],
  "outputs": {
    "webAppHostname": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', variables('webAppName')), '2023-12-01').defaultHostName]"
    },
    "functionHostname": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2023-12-01').defaultHostName]"
    },
    "webAppUrl": {
      "type": "string",
      "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', variables('webAppName')), '2023-12-01').defaultHostName)]"
    },
    "functionUrl": {
      "type": "string",
      "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', variables('functionAppName')), '2023-12-01').defaultHostName)]"
    },
    "vnetId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet', parameters('namePrefix')))]"
    },
    "functionPrivateEndpointId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-pe-func', parameters('namePrefix')))]"
    },
    "storageBlobPrivateEndpointId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/privateEndpoints', format('{0}-pe-storblob', parameters('namePrefix')))]"
    }
  }
}